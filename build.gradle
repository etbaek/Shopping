buildscript {
	ext {
		springBootVersion = "2.0.6.RELEASE"
		springVersion = "5.0.9.RELEASE"
		hibernateVersion = "5.2.17.Final"
		slf4jVersion = "1.7.25"
		junitVersion = "4.12"
		mysqlVersion = "8.0.13"
		jacksonVersion = "2.9.7"
		mockitoVersion = "2.23.0"
		assertJVersion = "3.11.1"
		hikariVersion = "3.1.0"
		logbackVersion = "1.2.3"
		okhttpVersion = "3.12.0"
		jsonPathVersion = "2.4.0"
		springCloudVersion = "Finchley.SR2"
		springCloudServicesClientLibrariesVersion = "2.0.2.RELEASE"
		springCloudCommonsVersion = "2.0.0.RELEASE"
		springSecurityOAuthAutoconfigVersion = "2.1.0.RELEASE"
		springCloudSsoVersion = "2.1.3.RELEASE"
	}

	repositories {
		mavenCentral()
		jcenter()
	}

	dependencies {
		classpath "org.springframework.boot:spring-boot-gradle-plugin:$springBootVersion"
		classpath "mysql:mysql-connector-java:$mysqlVersion"
	}
}

task dependenciesGraphDot {

	mustRunAfter "clean"

	def graphBuildDir = "build/dependenciesGraph"
	def dotFile = file "$graphBuildDir/graph.dot"

	doLast {
		delete graphBuildDir
		mkdir graphBuildDir

		dotFile << "digraph dependencies {\n"

		project.subprojects.forEach { Project subProject ->
			try {

				Configuration compileConfig = subProject.configurations["compile"]

				compileConfig
						.dependencies
						.grep { it.respondsTo("getDependencyProject") }
						.forEach { dotFile << """  "$subProject.name" -> "$it.dependencyProject.name"\n""" }
			} catch (UnknownConfigurationException ignored) {
			}
		}
		dotFile << "}\n"
	}
}

task dependenciesGraph(dependsOn: "dependenciesGraphDot", type: Exec) {
	workingDir "$project.buildDir/dependenciesGraph"
	commandLine "dot", "-O", "-Tpng", "graph.dot"
}

task clean(type: Delete) {
	delete "build"
}